/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 scene.gltf 
Author: Wasted (https://sketchfab.com/wastedmerc)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/chess-pieces-a06ec9a1bea14787bd4bbcd0749a1726
Title: Chess Pieces
*/

import React, { useRef, useLayoutEffect } from "react";
import { useGLTF } from "@react-three/drei";
import gsap from "gsap";
import { useThree } from "@react-three/fiber";
import { ScrollTrigger } from "gsap/ScrollTrigger";

gsap.registerPlugin(ScrollTrigger);

export function ChessPieces(props) {
  const { nodes, materials } = useGLTF("/scene.gltf");
  const peon = useRef();
  const tl = gsap.timeline();
  console.log(peon);
  useLayoutEffect(() => {
    new ScrollTrigger({});

    tl.to(peon.current.position, {
      x: -7,
      y: -.5,
      z: 3,
      scrollTrigger: {
        trigger: ".second-section",
        start: "top bottom",
        end: "top top",
        scrub: true,
        immediateRender: false,
        
      },
    }).to(peon.current.rotation, {
      y: 2,
      scrollTrigger: {
        trigger: ".second-section",
        start: "top bottom",
        end: "top top",
        scrub: true,
        immediateRender: false,
      },
    })
    tl.to(peon.current.position, {
      x: 1,
      y: -.5,
      z:-2,
      scrollTrigger: {
        trigger: ".third-section",
        start: "top bottom",
        end: "top top",
        scrub: true,
        immediateRender: false,
        
      },
    }).to(peon.current.rotation, {
      y: -.7, 
      scrollTrigger: {
        trigger: ".third-section",
        start: "top bottom",
        end: "top top",
        scrub: true,
        immediateRender: false,
      },
    })
    tl.to(peon.current.position, {
      x: 3,
      y: -2,
      z:12,
      scrollTrigger: {
        trigger: ".four-section",
        start: "top bottom",
        end: "top top",
        scrub: true,
        immediateRender: false     
      },
    }).to(peon.current.rotation, {
      y: .1, 
      scrollTrigger: {
        trigger: ".four-section",
        start: "top bottom",
        end: "top top",
        scrub: true,
        immediateRender: false,
      },
    })
 
  }, []);

  return (
    <group ref={peon} {...props} dispose={null}>
      <mesh
        castShadow={true}
        geometry={nodes.Object_4.geometry}
        material={materials["Material.001"]}
        position={[0.018, 0, 0]}
      >
       {/*  <meshPhysicalMaterial
          color={"#000"}
          emissive={"#000"}  
          roughness={1}
          clearcoat={1}
          reflectivity={0.2}
          metalness={1}
          iridescence={0.1}
          iridescenceIOR={1}
          iridescenceThicknessRange={[100, 1000]}
        /> */}
      </mesh>
      <mesh
        geometry={nodes.Object_6.geometry}
        material={materials["Material.001"]}
        position={[-2.411, 0, 0]}
        scale={[1, 0.15, 1]}
        castShadow={true}
      >  <meshPhysicalMaterial
       color={"#000"}
      emissive={"#000"}  
      roughness={1}
      clearcoat={1}
      reflectivity={0.2}
      metalness={1}
      iridescence={0.1}
      iridescenceIOR={1}
      iridescenceThicknessRange={[100, 1000]}
    /> 
  </mesh>
      <mesh
        geometry={nodes.Object_8.geometry}
        material={materials["Material.001"]}
        position={[2.609, 0, 0]}
        scale={[1, 0.15, 1]}
      > <meshPhysicalMaterial
    /*    color={"#000"}
      emissive={"#000"}  */
      roughness={1}
      clearcoat={1}
      reflectivity={0.2}
      metalness={1}
      iridescence={0.1}
      iridescenceIOR={1}
      iridescenceThicknessRange={[100, 1000]}
    /> 
  </mesh>
    </group>
  );
}

useGLTF.preload("/scene.gltf");
